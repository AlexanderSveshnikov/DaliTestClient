#ifndef COMMANDSELECTOR_H
#define COMMANDSELECTOR_H

#include <QWidget>
#include <QLineEdit>
#include <QComboBox>
#include <QList>
#include <QMessageBox>

#include "daliCommandParcer.h"

namespace Ui {
class CommandSelector;
}

class CommandSelector : public QWidget
{
    Q_OBJECT

public:
    explicit CommandSelector(QWidget *parent = nullptr);
    ~CommandSelector();
    void addExtendedCmdsSelector();
    uint8_t getValue();
    void fillByCommands();
    void specSelUpdate(QString currSpec);
    void getCommand(QString *dstStr);
    void getCommand(quint16 *cmdId, qint8* err);
    void getExtendedCommand(QString *dstStr);
    quint8 extendedCmdsGetOpCode();
    static void populateBySpecs(QComboBox* combo);
private:

    QList<QString>daliCommandsStrList =
    {
        "- DIRECT ARC POWER CONTROL", "0 OFF", "1 UP", "2 DOWN",
        "3 STEP UP", "4 STEP DOWN","5 RECALL MAX LEVEL", "6 RECALL MIN LEVEL",
        "7 STEP DOWN AND OFF", "8 ON AND STEP UP",
        "9 ENABLE DAPC SEQUENCE", "10 GO TO LAST ACTIVE LEVEL",
        "16 GO TO SCENE 0", "17 GO TO SCENE 1", "18 GO TO SCENE 2", "19 GO TO SCENE 3",
        "20 GO TO SCENE 4", "21 GO TO SCENE 5", "22 GO TO SCENE 6", "23 GO TO SCENE 7",
        "24 GO TO SCENE 8", "25 GO TO SCENE 9", "26 GO TO SCENE 10", "27 GO TO SCENE 11",
        "28 GO TO SCENE 12", "29 GO TO SCENE 13", "30 GO TO SCENE 14", "31 GO TO SCENE 15",
        "32 RESET", "33 STORE ACTUAL LEVEL IN THE DTR", "34 SAVE PERSISTENT VARIABLES",
        "35 SET DTR0 AS OPERATING MODE", "36 RESET MEMORY BANK (DTR0)",
        "37 IDENTIFY DEVICE", "42 STORE THE DTR AS MAX LEVEL",
        "43 STORE THE DTR AS MIN LEVEL", "44 STORE THE DTR AS SYSTEM FAILURE LEVEL",
        "45 STORE THE DTR AS POWERON LEVEL", "46 STORE THE DTR AS FADE TIME",
        "47 STORE THE DTR AS FADE RATE", "48 STORE THE DTR AS EXTENDED FADE TIME",
        "64 STORE THE DTR AS SCENE 0", "65 STORE THE DTR AS SCENE 1", "66 STORE THE DTR AS SCENE 2",
        "67 STORE THE DTR AS SCENE 3", "68 STORE THE DTR AS SCENE 4", "69 STORE THE DTR AS SCENE 5",
        "70 STORE THE DTR AS SCENE 6", "71 STORE THE DTR AS SCENE 7", "72 STORE THE DTR AS SCENE 8",
        "73 STORE THE DTR AS SCENE 9", "74 STORE THE DTR AS SCENE 10", "75 STORE THE DTR AS SCENE 11",
        "76 STORE THE DTR AS SCENE 12", "77 STORE THE DTR AS SCENE 13", "78 STORE THE DTR AS SCENE 14",
        "79 STORE THE DTR AS SCENE 15", "80 REMOVE FROM SCENE 0", "81 REMOVE FROM SCENE 1",
        "82 REMOVE FROM SCENE 2", "83 REMOVE FROM SCENE 3", "84 REMOVE FROM SCENE 4",
        "85 REMOVE FROM SCENE 5", "86 REMOVE FROM SCENE 6", "87 REMOVE FROM SCENE 7",
        "88 REMOVE FROM SCENE 8", "89 REMOVE FROM SCENE 9", "90 REMOVE FROM SCENE 10",
        "91 REMOVE FROM SCENE 11", "92 REMOVE FROM SCENE 12", "93 REMOVE FROM SCENE 13",
        "94 REMOVE FROM SCENE 14", "95 REMOVE FROM SCENE 15", "96 ADD TO GROUP 0",
        "97 ADD TO GROUP 1", "98 ADD TO GROUP 2", "99 ADD TO GROUP 3", "100 ADD TO GROUP 4",
        "101 ADD TO GROUP 5", "102 ADD TO GROUP 6", "103 ADD TO GROUP 7", "104 ADD TO GROUP 8",
        "105 ADD TO GROUP 9", "106 ADD TO GROUP 10", "107 ADD TO GROUP 11", "108 ADD TO GROUP 12",
        "109 ADD TO GROUP 13", "110 ADD TO GROUP 14", "111 ADD TO GROUP 15",
        "112 REMOVE FROM GROUP 0", "113 REMOVE FROM GROUP 1", "114 REMOVE FROM GROUP 2",
        "115 REMOVE FROM GROUP 3", "116 REMOVE FROM GROUP 4", "117 REMOVE FROM GROUP 5",
        "118 REMOVE FROM GROUP 6", "119 REMOVE FROM GROUP 7", "120 REMOVE FROM GROUP 8",
        "121 REMOVE FROM GROUP 9", "122 REMOVE FROM GROUP 10", "123 REMOVE FROM GROUP 11",
        "124 REMOVE FROM GROUP 12", "125 REMOVE FROM GROUP 13", "126 REMOVE FROM GROUP 14",
        "127 REMOVE FROM GROUP 15", "128 STORE DTR AS SHORT ADDRESS", "129 ENABLE WRITE MEMORY",
        "144 QUERY STATUS", "145 QUERY CONTROIL GEAR", "146 QUERY LAMP FAILKURE",
        "147 QUERY LAMP POWER ON", "148 QUERY LIMIT ERROR", "149 QUERY RESET STATE",
        "150 QUERY MISSING SHORT ADDRESS", "151 QUERY VERSION NUMBER", "152 QUERY CONTENT DTR",
        "153 QUERY DEVICE TYPE", "154 QUERY PHYSICAL MINIMUM LEVEL", "155 QUERY POWER FAILURE",
        "156 QUERY CONTENT DTR1", "157 QUERY CONTENT DTR2", "158 QUERY OPERATING MODE",
        "159 QUERY LIGHT SOURCE TYPE", "160 QUERY ACTUAL LEVEL",
        "161 QUERY MAX LEVEL", "162 QUERY MIN LEVEL", "163 QUERY POWERON LEVEL",
        "164 QUERY SYSTEM FAILURE LEVEL", "165 QUERY FADE TIME/FADE RATE",
        "166 QUERY MANUFACTURER SPECIFIC MODE", "167 QUERY NEXT DEVICE TYPE", "168 QUERY EXTENDED FADE TIME",
        "170 QUERY CONTROL GEAR FAMILY", "176 QUERY SCENE LEVEL 0",
        "177 QUERY SCENE LEVEL 1", "178 QUERY SCENE LEVEL 2", "179 QUERY SCENE LEVEL 3",
        "180 QUERY SCENE LEVEL 4", "181 QUERY SCENE LEVEL 5", "182 QUERY SCENE LEVEL 6",
        "183 QUERY SCENE LEVEL 7", "184 QUERY SCENE LEVEL 8", "185 QUERY SCENE LEVEL 9",
        "186 QUERY SCENE LEVEL 10", "187 QUERY SCENE LEVEL 11", "188 QUERY SCENE LEVEL 12",
        "189 QUERY SCENE LEVEL 13", "190 QUERY SCENE LEVEL 14", "191 QUERY SCENE LEVEL 15",
        "192 QUERY GROUPS 0-7", "193 QUERY GROUPS 8-15", "194 QUERY RANDOM ADDRESS H",
        "195 QUERY RANDOM ADDRESS M", "196 QUERY RANDOM ADDRESS L", "197 READ MEMORY LOCATION",
        "255 QUERY EXTENDED VERSION NUM", "256 TERMINATE", "257 DTR0", "258 INITIALISE",
        "259 RANDOMISE", "260 COMPARE", "261 WITHDRAW", "264 SEARCHADDRH",
        "265 SEARCHADDRM", "266 SEARCHADDRL", "267 PROGRAM SHORT ADDRESS",
        "268 VERIFY SHORT ADDRESS", "269 QUERY SHORT ADDRESS",
        "272 ENABLE DEVICE TYPE X", "273 DTR1", "274 DTR2", "275 WRITE MEMORY LOCATION",
        "276 WRITE MEMORY LOCATION - NO REPLY",
    };

    QList<QString>daliSpec202ExtCommandsStrList =
    {
        "224 REST", "225 INHIBIT", "226 RE-LIGHT/RESET INHIBIT", "227 START FUNCTION TEST",
        "228 START DURATION TEST", "229 STOP TEST", "230 RESET FUNCTION TEST DONE FLAG",
        "231 RESET DURATION TEST DONE FLAG", "232 RESET LAMP TIME", "233 STORE DTR AS EMERGENCY LEVEL",
        "234 STORE TEST DELAY TIME HIGH BYTE", "235 STORE TEST DELAY TIME LOW BYTE",
        "236 STORE FUNCTION TEST INTERVAL", "237 STORE DURATION TEST INTERVAL", "238 STORE TEST EXECUTION TIMEOUT",
        "239 STORE PROLONG TIME", "240 START IDENTIFICATION", "241 QUERY BATTERY CHARGE",
        "242 QUERY TEST TIMING", "243 QUERY DURATION TEST RESULT", "244 QUERY LAMP EMERGENCY TIME",
        "245 QUERY LAMP TOTAL OPERATION TIME", "246 QUERY EMERGENCY LEVEL", "247 QUERY EMERGENCY MIN LEVEL",
        "248 QUERY EMERGENCY MAX LEVEL", "249 QUERY RATED DURATION", "250 QUERY EMERGENCY MODE",
        "251 QUERY FEATURES", "252 QUERY FAILURE STATUS", "253 QUERY EMERGENCY STATUS",
        "254 PEFORM DTR SELECTED FUNCTION", "255 QUERY EXTENDED VERSION NUMBER"
    };

    QList<QString>daliSpec209ExtCommandsStrList =
    {
       "224 SET TEMPORARY x-COORDINATE", "225 SET TEMPORARY y-COORDINATE", "226 ACTIVATE",
       "227 x-COORDINATE STEP UP", "228 x-COORDINATE STEP DOWN", "229 y-COORDINATE STEP UP",
       "230 y-COORDINATE STEP DOWN", "231 SET TEMPORARY COLOUR TEMPERATURE Tc",
       "232 COLOUR TEMPERATURE Tc STEP COOLER",  "233 COLOUR TEMPERATURE TC STEP WARMER",
       "234 SET TEMPORARY PRIMARY N DIMLEVEL", "235 SET TEMPORARY RGB DIMLEVEL",
       "236 SET TEMPORARY WAF DIMLEVEL", "237 SET TEMPORARY RGBWAF CONTROL", "238 COPY REPORT TO TEMPORARY",
       "240 STORE TY PRIMARY N", "241 STORE xy-COORDINATE PRIMARY N", "242 STORE COLOUR TEMPERATURE TC LIMIT",
       "243 STORE GEAR FEATURES/STATUS", "245 ASSIGN COLOUR TO LINKED CHANNEL", "246 START AUTO CALIBRATION",
       "247 QUERY GEAR FEATURES/STATUS", "248 QUERY COLOUR STATUS", "249 QUERY COLOUR TYPE FEATURES",
       "250 QUERY COLOUR VALUE", "251 QUERY RGBWAF CONTROL", "252 QUERY ASSIGNED COLOUR",
       "255 QUERY EXTENDED VERSION NUMBER",
    };

    QList<QString>daliSpec207ExtCommandsStrList =
    {
       "224 REFERENCE SYSTEM POWER", "225 ENABLE CURRENT PROTECTOR", "226 DISABLE CURRENT PROTECTOR",
       "227 SELECT DIMMING CURVE", "228 STORE DTR AS FAST FADE TIME", "237 QUERY GEAR TYPE",
       "238 QUERY DIMMING CURVE", "239 QUERY POSSIBLE OPERATING MODES", "240 QUERY FEATURES",
       "241 QUERY FAILURE STATUS", "242 QUERY SHORT CIRCUIT", "243 QUERY OPEN CIRCUIT",
       "244 QUERY LOAD DECREASE", "245 QUERY LOAD INCREASE", "246 QUERY CURRENT PROTECTOR ACTIVE",
       "247 QUERY THERMAL SHUT DOWN", "248 QUERY THERMAL OVERLOAD", "249 QUERY REFERENCE RUNNING",
       "250 QUERY REFERENCE MEASUREMENT FAILED", "251 QUERY CURRENT PROTECTOR ENABLED", "252 QUERY OPERATING MODE",
       "253 QUERY FAST FADE TIME", "254 QUERY MIN FAST FADE TIME",  "255 QUERY EXTENDED VERSION NUMBER",
    };

    QList<QString>daliSpec205ExtCommandsStrList =
    {
       "224 REFERENCE SYSTEM POWER", "225 SELECT DIMMING CURVE", "238 QUERY DIMMING CURVE",
       "239 QUERY DIMMER STATUS", "240 QUERY FEATURES", "241 QUERY FAILURE STATUS",
       "242 QUERY DIMMER TEMPERATURE", "243 QUERY RMS SUPPLY VOLTAGE", "244 QUERY SUPPLY FREQUENCY",
       "245 QUERY RMS LOAD VOLTAGE", "246 QUERY RMS LOAD CURRENT", "247 QUERY REAL LOAD POWER",
       "248 QUERY LOAD RATING", "249 QUERY REFERENCE RUNNING", "250 QUERY REFERENCE MEASUREMENT FAILED",
       "255 QUERY EXTENDED VERSION NUMBER",
    };
    quint8 spec = 207;
    uint8_t address_byte = 0;
    uint8_t opcode_byte = 0;
    quint16 cmdId = 0;
    bool sendPeriodically = false;

    bool set_twice;
    bool answer;
    bool is_special;

    Ui::CommandSelector *ui;
    void setSpecificationCommands(QString currSpec, QComboBox* dstCombo);
signals:
    void specChangedSgn();
private slots:
    void updateDaliDataSetSlider(int sliderVal);
    void extCmdsSpecSelChanged();
    void dataDecEditTextChanged();
    void dataHexEditTextChanged();
};

#endif // COMMANDSELECTOR_H
